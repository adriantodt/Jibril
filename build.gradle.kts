import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    kotlin("jvm") version "1.3.30"
    application
    id("com.github.ben-manes.versions") version "0.21.0"
}

group = "pw.aru"
version = "3.0"

repositories {
    jcenter()
    maven { url = uri("https://jitpack.io") }
    maven { url = uri("https://dl.bintray.com/arudiscord/maven") }
    maven { url = uri("https://dl.bintray.com/arudiscord/kotlin") }
    maven { url = uri("https://dl.bintray.com/arudiscord/hg") }
    maven { url = uri("https://dl.bintray.com/adriantodt/maven") }
    maven { url = uri("https://dl.bintray.com/kodehawa/maven") }
    mavenLocal()
}

dependencies {
    compile(kotlin("stdlib-jdk8"))
    compile(kotlin("reflect"))

    compile(project("aruCore"))

    compile("com.github.mewna:catnip:1.2.3")
    compile("com.github.queer:catnip-utilities:360b876")
    compile("io.projectreactor.addons:reactor-adapter:3.2.2.RELEASE")
    compile("io.reactivex.rxjava2:rxkotlin:2.2.0")


    // Main APIs
    compile("com.sedmelluq:lavaplayer:1.3.16")
    compile("com.github.natanbc:weeb4j:3.5")
    compile("pw.aru.libs:andeclient:1.2")

    // Useful
    compile("net.kodehawa:imageboard-api:2.0.7")

    // Open-Source Libraries
    compile("pw.aru.libs:dice-notation:1.1")
    compile("pw.aru.libs:properties:1.2")
    compile("pw.aru.libs:snowflake-local:1.0")
    compile("pw.aru.libs:DD4J:1.0")
    compile("pw.aru.hg:hg-engine:1.0")
    compile("pw.aru.hg:hg-loader:1.0")

    //Helping stuff
    compile("org.apache.commons:commons-lang3:3.8.1")
    compile("org.apache.commons:commons-collections4:4.1")
    compile("org.apache-extras.beanshell:bsh:2.0b6")

    //Scanning and Injections
    compile("io.github.classgraph:classgraph:4.8.24")
    compile("org.kodein.di:kodein-di-generic-jvm:6.1.0")
    compile("pw.aru.libs:kodein-jit-bindings:2.2")

    //Logging
}

tasks.withType<KotlinCompile> {
    kotlinOptions.jvmTarget = "1.8"
}

configure<ApplicationPluginConvention> {
    mainClassName = "pw.aru.Init"
}

with(rootProject.file("src/main/kotlin/pw/aru/exported/exported.kt")) {
    parentFile.mkdirs()
    createNewFile()
    writeText(
        """
@file:JvmName("AruExported")
@file:Suppress("unused")

/*
 * file "exported.kt". DO NOT EDIT MANUALLY. THIS FILE IS GENERATED BY GRADLE.
 */

package pw.aru.exported

/**
 * Aru! Version
 */
const val aru_version = "$version"

/**
 * User Agent
 */
const val user_agent = "catnip/DiscordBot (Aru! $version)"
""".trim()
    )
}

tasks {
    register("runLocalRedis", Exec::class) {
        workingDir("db")
        commandLine("db/redis-server.exe", "./redis.conf")
    }

    register("runAndesite", Exec::class) {
        workingDir("andesite")
        commandLine("java", "-jar", "andesite.jar") //-node-0.13.1-win-x86-64
    }
}

