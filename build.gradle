// Gradle for Aru

//Plugins

plugins {
    id 'java'
    //Compiles Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    //Adds an Executable Manifest
    id 'application'
    //Creates FatJars
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    //Version checking
    id "com.github.ben-manes.versions" version "0.20.0"
    //Docker
    id "com.palantir.docker" version "0.21.0"
}

group = 'pw.aru'
version = '2.6.1-LTS'
mainClassName = 'pw.aru.Bootstrap'

//Repositories and Dependencies
repositories {
    jcenter()
    maven { url = 'https://dl.bintray.com/adriantodt/maven' }
    maven { url = 'https://dl.bintray.com/arudiscord/maven' }
    maven { url = 'https://dl.bintray.com/arudiscord/kotlin' }
    maven { url = 'https://dl.bintray.com/arudiscord/hg' }
    maven { url = 'https://dl.bintray.com/kodehawa/maven' }
    mavenLocal()
}

dependencies {
    //Dependency: aruDB
    compile project('aruDB')

    //Source of memes
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31'
    compile 'org.jetbrains.kotlin:kotlin-reflect:1.3.31'

    // Main APIs
    compile 'net.dv8tion:JDA:3.8.3_463'
    compile 'com.sedmelluq:lavaplayer:1.3.17'
    compile 'com.github.natanbc:discordbots-api:3.3.3'
    compile 'com.github.natanbc:weeb4j:3.5'

    // Useful
    compile 'com.sedmelluq:jda-nas:1.0.6'
    compile 'com.jagrosh:jda-utilities-menu:2.1.5'
    compile("net.kodehawa:imageboard-api:2.0.7")

    // Open-Source Libraries
    compile("pw.aru.libs:dice-notation:1.1")
    compile("pw.aru.libs:properties:1.2")
    compile("pw.aru.libs:snowflake-local:1.0")
    compile("pw.aru.libs:DD4J:1.0")
    compile("pw.aru.hg:hg-engine:1.0")
    compile("pw.aru.hg:hg-loader:1.0")

    //Scanning and Injections
    compile("io.github.classgraph:classgraph:4.8.36")
    compile("org.kodein.di:kodein-di-generic-jvm:6.2.0")
    compile("pw.aru.libs:kodein-jit-bindings:2.2")

    //Helping stuff
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'org.apache-extras.beanshell:bsh:2.0b6'

    //Logging
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.github.microutils:kotlin-logging:1.6.26'
}

//FILE src/main/kotlin/aru/exported/exported.kt
rootProject.file('src/main/kotlin/pw/aru/exported/exported.kt').with {
    parentFile.mkdirs()
    createNewFile()
    write("""
@file:JvmName("AruExported")
@file:Suppress("unused")

/*
 * file "exported.kt". DO NOT EDIT MANUALLY. THIS FILE IS GENERATED BY GRADLE.
 */

package pw.aru.exported

/**
 * Aru! Version
 */
const val aru_version = "${version}"

/**
 * User Agent
 */
const val user_agent = "JDA/DiscordBot (Aru! ${version})"
""".trim(), 'UTF-8')
}

//BELOW: TASKS AND CONFIGS YOU PROBABLY DON'T NEED TO TWEAK MORE THAN ONCE IN A LIFETIME

task packAssets(type: Zip) {
    baseName = 'assets'; from file('./assets'); destinationDir = file('build/assets'); version = ''
}
task wrapper(type: Wrapper) { gradleVersion = '4.6' }
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileKotlin, compileTestKotlin].each { it.kotlinOptions.jvmTarget = "1.8" }
artifacts { archives shadowJar }
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
task cleanDistArchives(type: Delete) { delete files(distTar, distZip, jar) }
[jar, distZip, distTar].each { it.with { classifier = 'trash'; finalizedBy cleanDistArchives } }
dependencyUpdates.revision = 'release'

docker {
    dependsOn shadowJar
    name = "adriantodt/aru:${version}"
    files("build/libs/aru-${version}-all.jar")
    copySpec.from("run/assets").into("assets")
    buildArgs([version: version.toString(), jattachVersion: "v1.5"])
}
