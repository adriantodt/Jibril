// Gradle for Aru

//Plugins

plugins {
    //Compiles Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.2.61'
    //Adds an Executable Manifest
    id 'application'
    //Creates FatJars
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    //Version checking
    id "com.github.ben-manes.versions" version "0.20.0"
}

group = 'pw.aru'
version = '2.4'
mainClassName = 'pw.aru.Bootstrap'

// Minified Splash
({ String l, String v ->
    def d = "$l ${(v.size() + l.size() + 1) % 2 != 0 ? "-" : "--"} v$v"
    def w = (0..(30 - d.size() / 2)).collect { it % 2 != 0 ? '-' : '=' }.join ''
    println "|$w| $d |${w.reverse()}|"
})('Aru!', version)

//Repositories and Dependencies
repositories {
    jcenter()
    maven { url = 'https://dl.bintray.com/adriantodt/maven' }
    maven { url = 'https://dl.bintray.com/kodehawa/maven' }
    mavenLocal()
}

dependencies {
    //Dependency: aruDB
    compile project('aruDB')

    //Source of memes
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.61'
    compile 'org.jetbrains.kotlin:kotlin-reflect:1.2.61'

    // Main APIs
    compile 'net.dv8tion:JDA:3.7.1_406'
    compile 'com.sedmelluq:lavaplayer:1.3.7'
    compile 'com.github.natanbc:discordbots-api:3.3.3'
    compile 'com.github.natanbc:weeb4j:3.3'

    // Useful
    compile 'com.sedmelluq:jda-nas:1.0.6'
    compile 'com.jagrosh:jda-utilities-menu:2.1.4'
    compile 'net.kodehawa:imageboard-api:2.0.5'

    // Open-Source Libraries
    compile 'pw.aru.discord:dice-notation:1.0'
    compile 'pw.aru.utils:properties:1.1'
    compile 'pw.aru.utils:simple-ipc:1.3'
    compile 'pw.aru.snowflake:snowflake-local:1.0'
    compile 'pw.aru.hungergames:hg-engine:1.0'
    compile 'pw.aru.hungergames:hg-loader:1.0'
    compile 'pw.aru.api:DD4J:1.0.1'

    //Helping stuff
    compile 'org.apache.commons:commons-lang3:3.8'
    compile 'org.apache-extras.beanshell:bsh:2.0b6'

    //Scanning and Injections
    compile 'io.github.lukehutch:fast-classpath-scanner:3.1.12'
    compile 'org.kodein.di:kodein-di-generic-jvm:5.0.0'
    compile 'pw.aru.kt:kodein-jit-bindings:1.1.1'

    //Logging
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.github.microutils:kotlin-logging:1.5.9'
}

//FILE src/main/kotlin/aru/exported/exported.kt
rootProject.file('src/main/kotlin/pw/aru/exported/exported.kt').with {
    parentFile.mkdirs()
    createNewFile()
    write("""
@file:JvmName("AruExported")
@file:Suppress("unused")

/*
 * file "exported.kt". DO NOT EDIT MANUALLY. THIS FILE IS GENERATED BY GRADLE.
 */

package pw.aru.exported

/**
 * Aru! Version
 */
const val aru_version = "${version}"

/**
 * User Agent
 */
const val user_agent = "JDA/DiscordBot (Aru! ${version})"
""".trim(), 'UTF-8')
}

//BELOW: TASKS AND CONFIGS YOU PROBABLY DON'T NEED TO TWEAK MORE THAN ONCE IN A LIFETIME

task packAssets(type: Zip) { baseName = 'assets'; from file('./assets'); destinationDir = file('build/assets'); version = '' }
task wrapper(type: Wrapper) { gradleVersion = '4.6' }
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileKotlin, compileTestKotlin].each { it.kotlinOptions.jvmTarget = "1.8" }
artifacts { archives shadowJar }
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
task cleanDistArchives(type: Delete) { delete files(distTar, distZip, jar) }
[jar, distZip, distTar].each { it.with { classifier = 'trash'; finalizedBy cleanDistArchives } }
shadowJar.classifier = ''
dependencyUpdates.revision = 'release'