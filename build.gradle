// Gradle for Aru

//Plugins
plugins {
    //Compiles Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.2.41'
    //Adds an Executable Manifest
    id 'application'
    //Creates FatJars
    id 'com.github.johnrengelman.shadow' version '2.0.3'
}

group = 'pw.aru'
version = '2.0-pre5'
mainClassName = 'pw.aru.Bootstrap'

// Minified Splash
({ String l, String v ->
    def d = "$l ${(v.size() + l.size() + 1) % 2 != 0 ? "-" : "--"} v$v"
    def w = (0..(30 - d.size() / 2)).collect { it % 2 != 0 ? '-' : '=' }.join ''
    println "|$w| $d |${w.reverse()}|"
})("Aru", version)

//Repositories and Dependencies
repositories {
    jcenter()
    maven { url = "https://dl.bintray.com/adriantodt/maven" }
    mavenLocal()
}

def kotlin_version = '1.2.41'

dependencies {
    //Source of memes
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Main APIs
    compile 'net.dv8tion:JDA:3.6.0_362'
    compile 'com.sedmelluq:lavaplayer:1.2.63'
    compile 'com.github.natanbc:discordbots-api:3.3.3'
    compile 'com.github.natanbc:weeb4j:3.2'

    // Useful
    compile 'com.sedmelluq:jda-nas:1.0.5'
    compile 'com.jagrosh:jda-utilities-menu:2.1.1'

    // Open-Source Libraries

    //Group WILL change
    compile 'jibril:dice-notation:1.0'
    compile 'jibril:snowflake-local:1.0'

    //Project NoClouds
    compile 'xyz.cuteclouds:CloudyUtils:1.0'
    compile 'xyz.cuteclouds:HungerGames:1.0.2'

    //Helping stuff
    compile 'com.google.guava:guava:22.0'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'org.apache-extras.beanshell:bsh:2.0b6'

    //Scanning and Injections
    compile 'org.kodein.di:kodein-di-generic-jvm:5.0.0'
    compile 'pw.aru.kt:kodein-jit-bindings:1.1.1'
    compile 'org.reflections:reflections:0.9.11'

    //Data Stack
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0'
    compile 'redis.clients:jedis:2.9.0'
    compile 'de.undercouch:bson4jackson:2.9.0'

    //Logging
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.github.microutils:kotlin-logging:1.4.6'

    //Console
    compile 'org.jline:jline:3.5.1'
    compile 'net.java.dev.jna:jna:4.5.0'
    compile 'org.fusesource.jansi:jansi:1.16'
}

//FILE src/main/kotlin/aru/exported/exported.kt
new File("src/main/kotlin/pw/aru/exported/exported.kt").with {
    createNewFile()
    write("""
@file:JvmName("AruExported")
@file:Suppress("unused")

/*
 * file "exported.kt". DO NOT EDIT MANUALLY. THIS FILE IS GENERATED BY GRADLE.
 */

package pw.aru.exported

/**
 * Aru Version
 */
const val aru_version = "${version}"

/**
 * Kotlin Version
 */
const val kotlin_version = "${kotlin_version}"

/**
 * User Agent
 */
const val user_agent = "JDA/DiscordBot (Aru ${version})"
""".trim(), "UTF-8")
}

//BELOW: TASKS AND CONFIGS YOU PROBABLY DON'T NEED TO TWEAK MORE THAN ONCE IN A LIFETIME

task packAssets(type: Zip) { baseName = 'assets'; from file('./assets'); destinationDir = file('build/assets'); version = '' }
processResources.dependsOn packAssets
task wrapper(type: Wrapper) { gradleVersion = '4.6' }
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileKotlin, compileTestKotlin].each { it.kotlinOptions.jvmTarget = "1.8" }
artifacts { archives shadowJar }
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
task cleanDistArchives(type: Delete) { delete files(distTar, distZip, jar) }
[jar, distZip, distTar].each { it.with { classifier = "trash"; finalizedBy cleanDistArchives } }
shadowJar.classifier = ""